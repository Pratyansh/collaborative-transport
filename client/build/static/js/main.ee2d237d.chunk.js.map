{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/shipmentReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/AddShipment.js","components/widgets/Card.jsx","components/auth/ShipmentList.js","components/auth/Register.js","components/private-route/PrivateRoute.js","components/widgets/Tab.jsx","components/widgets/Form.jsx","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","logoutUser","dispatch","localStorage","removeItem","setCurrentUser","decoded","type","payload","isEmpty","require","initialState","isAuthenticated","user","loading","shipments","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navbar","onLogoutClick","e","preventDefault","props","this","className","to","style","fontFamily","name","onClick","Component","connect","Landing","height","width","borderRadius","letterSpacing","Login","onChange","setState","target","id","value","onSubmit","userData","email","password","loginUser","history","push","nextProps","marginTop","noValidate","error","classnames","invalid","emailnotfound","htmlFor","passwordincorrect","paddingLeft","post","then","res","data","setItem","jwt_decode","catch","err","response","AddShipment","shipmentData","destination","filledSpace","availableSpace","dispatchDate","addShipment","filledSpaceincorrect","availableSpaceincorrect","dispatchDateincorrect","Card","heading","details","details2","details3","class","src","alt","slice","ShipmentList","console","log","listShipments","map","shipment","key","Register","newUser","password2","registerUser","withRouter","component","rest","render","Tab","icon","classes","Form","onClose","onReset","marginBottom","useState","showModal","setShowModal","useHistory","reroute","path","split","jwtToken","currentTime","Date","now","exp","window","location","href","App","exact","Dashboard","exect","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee2d237d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n      // Apply authorization token to every request if logged in\n      axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n      // Delete auth header\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  export default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { USER_LOADING, SET_CURRENT_USER, GET_ERRORS, SET_ACTIVE_SHIPMENTS } from \"./types\";\n\n//Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post(\"/api/users/register\", userData)\n    .then(res => {\n        history.push(\"/login\");\n    })\n    .catch (err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    });\n};\n\n//Login User - token required\n\nexport const loginUser = (userData) => dispatch => {\n    axios.post(\"/api/users/login\", userData)\n    .then(res=> {\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\",token);\n        setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => {\n        dispatch ({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n//Log out user\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n}\n\n//Set currently logged in user\n\nexport const setCurrentUser = (decoded) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    }\n}\n\n//Add Shipment - token required\n\nexport const addShipment = (shipmentData, history) => dispatch => {\n    axios.post(\"/api/shipment/add\", shipmentData)\n    .then(res=> {\n        history.push(\"/dashboard\");\n    })\n    .catch(err => {\n        dispatch ({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\nexport const listShipments = () => dispatch => {\n    axios.post(\"/api/shipment/list\")\n    .then(res=> {\n        console.log(\"Success API call\");\n        dispatch ({\n            type: SET_ACTIVE_SHIPMENTS,\n            payload: res.data\n        })\n    })\n    .catch(err => {\n        console.log(\"error\",err);\n        dispatch ({\n            type: USER_LOADING,\n            payload: err.response.data\n        })\n    })\n}","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_ACTIVE_SHIPMENTS = \"SET_ACTIVE_SHIPMENTS\";","import {SET_CURRENT_USER, USER_LOADING} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { SET_ACTIVE_SHIPMENTS } from \"../actions/types\";\n\nconst initialState = {\n  shipments: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ACTIVE_SHIPMENTS:\n      return { ...state, shipments: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport shipmentReducer from \"./shipmentReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  shipments: shipmentReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper bg-green-500 flex flex-row justify-between\">\n            <div>\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\",\n              }}\n              className=\"absolute inline-block left-0 ml-12\"\n            >\n              <div className=\"font-light bg-green-600 p-2 inline text-xl text-white shadow-md\">\n              Truck-Truck-Go\n              </div>\n            </Link>\n            </div>\n            {user.name && <div className=\"inline-block mr-12\">\n              <button\n              onClick={this.onLogoutClick}\n              className=\"btn w-32 waves-effect waves-light hover:shadow-lg hover:bg-green-700 rounded-md bg-green-600 accent-3\"\n            >\n              Logout\n            </button>\n            </div>\n            }\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);","//2 tabs - open shipments, create shipment\n/*\nOpen Shipment - \n- Cards with Open truck details\n- - Open shipment cards - show space available\nCreate Shipment\n- Form with Create shipment details\n*/\n\n\nimport React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n            <div className=\"row\">\n              <div className=\"col s12 center-align\">\n                <h4>\n                  <span style={{ fontFamily: \"monospace\" }}>Collaborative-Transportation</span>\n                </h4>\n                <p className=\"flow-text grey-text text-darken-1\">\n                  Create/Opt-in shipments in your own authenticated personal space\n                </p>\n                <br />\n                <div className=\"col s6\">\n                  <Link\n                    to=\"/register\"\n                    style={{\n                      width: \"140px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\"\n                    }}\n                    className=\"btn btn-large waves-effect waves-light hover:shadow-lg hover:bg-green-700 bg-green-600 accent-3\"\n                  >\n                    Register\n                  </Link>\n                </div>\n                <div className=\"col s6\">\n                  <Link\n                    to=\"/login\"\n                    style={{\n                      width: \"140px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\"\n                    }}\n                    className=\"btn btn-large btn-flat waves-effect bg-gray-300 hover:bg-gray-400 black-text\"\n                  >\n                    Log In\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount(){\n    if(this.props.auth.isAuthenticated){\n      this.props.history.push(\"/dashboard\");\n    }\n  };\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\nif (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2 flex flex-col\">\n            {/* <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link> */}\n            <div className=\"col s12\">\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\"><b>Register</b></Link>\n              </p>\n            </div>\n            <div className=\"self-center w-3/4\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hover:shadow-lg hover:bg-green-700 bg-green-600 accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addShipment } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass AddShipment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      destination: \"\",\n      filledSpace: \"\",\n      availableSpace: \"\",\n      dispatchDate: \"\",\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const shipmentData = {\n      destination: this.state.destination,\n      filledSpace: this.state.filledSpace,\n      availableSpace: this.state.availableSpace,\n      dispatchDate: this.state.dispatchDate,\n    };\n    this.props.addShipment(shipmentData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2 flex flex-col\">\n            <div className=\"col s12\">\n              <h4>\n                <b>Add Shipment</b> below\n              </h4>\n            </div>\n            <div className=\"self-center w-3/4\">\n              <form noValidate onSubmit={this.onSubmit}>\n                {/* Destination field */}\n                <div className=\"input-field col s12\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.destination}\n                    error={errors.destination}\n                    id=\"destination\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                      invalid: errors.destination,\n                    })}\n                  />\n                  <label htmlFor=\"destination\">Destination</label>\n                  <span className=\"red-text\">{errors.destination}</span>\n                </div>\n                {/* Filled Space field */}\n                <div className=\"input-field col s12\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.filledSpace}\n                    error={errors.filledSpace}\n                    id=\"filledSpace\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                      invalid:\n                        errors.filledSpace || errors.filledSpaceincorrect,\n                    })}\n                  />\n                  <label htmlFor=\"password\">Filled Space</label>\n                  <span className=\"red-text\">\n                    {errors.filledSpace}\n                    {errors.filledSpaceincorrect}\n                  </span>\n                </div>\n                {/* Available Space field */}\n                <div className=\"input-field col s12\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.availableSpace}\n                    error={errors.availableSpace}\n                    id=\"availableSpace\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                      invalid:\n                        errors.availableSpace || errors.availableSpaceincorrect,\n                    })}\n                  />\n                  <label htmlFor=\"password\">Available Space</label>\n                  <span className=\"red-text\">\n                    {errors.availableSpace}\n                    {errors.availableSpaceincorrect}\n                  </span>\n                </div>\n                {/* Dispatch Date field */}\n                <div className=\"input-field col s12\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.dispatchDate}\n                    error={errors.dispatchDate}\n                    id=\"dispatchDate\"\n                    type=\"date\"\n                    className={classnames(\"\", {\n                      invalid:\n                        errors.dispatchDate || errors.dispatchDateincorrect,\n                    })}\n                  />\n                  <label htmlFor=\"password\">Dispatch Date</label>\n                  <span className=\"red-text\">\n                    {errors.dispatchDate}\n                    {errors.dispatchDateincorrect}\n                  </span>\n                </div>\n\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\",\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hover:shadow-lg hover:bg-green-700 bg-green-600 accent-3\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddShipment.propTypes = {\n  addShipment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { addShipment })(AddShipment);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Card extends Component {\n  render() {\n    const {\n      heading,\n      details,\n      details2,\n      details3\n    } = this.props;\n    return (\n      <div class=\"max-w-xs rounded overflow-hidden shadow-lg my-2\">\n        <img\n          class=\"w-full\"\n          src=\"https://tailwindcss.com/img/card-top.jpg\"\n          alt=\"Sunset in the mountains\"\n        ></img>\n        <div class=\"px-6 py-4 bg-gray-300\">\n          <div class=\"font-bold text-xl mb-2\">{heading}</div>\n          <div class=\"flex justify-around px-2 py-2\">\n            <div class=\"bg-gray-200 p-2\">Available Space</div>\n            <p class=\"text-grey-darker text-base p-2\">{details}</p>\n          </div>\n          <div class=\"flex justify-around px-2 py-2\">\n            <div class=\"bg-gray-200 p-2\">Filled Space</div>\n            <p class=\"text-grey-darker text-base p-2\">{details2}</p>\n          </div>\n        </div>\n        <div class=\"px-6 py-4\">\n          <span class=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2\">\n            {details3.slice(0, 10)}\n          </span>\n          {/* <span class=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2\">\n            #travel\n          </span>\n          <span class=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker\">\n            #winter\n          </span> */}\n        </div>\n      </div>\n    );\n  }\n}\nCard.propTypes = {\n  heading: PropTypes.string.isRequired,\n  details: PropTypes.string,\n  details2: PropTypes.string,\n  details3: PropTypes.string\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { listShipments } from \"../../actions/authActions\";\nimport Card from \"../widgets/Card\";\nclass ShipmentList extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    console.log(\"SD=\", this.props);\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n\n    this.props.listShipments();\n    console.log(this.props.shipments);\n  }\n\n  componentDidUpdate() {\n    console.log(\"Hey=\",this.props);\n  }\n\n  render() {\n    let shipments = this.props.shipments.shipments;\n    return (\n      <div id=\"shipmentList\" className=\"\">\n        {shipments ? (\n          <div style={{ marginTop: \"4rem\" }} className=\"row\">\n            <div className=\"col s8 offset-s2 flex flex-col\">\n              <div className=\"col s12\">\n                <h4>\n                  <b>Ongoing Shipments</b>\n                </h4>\n                {shipments !== null ? (\n                  <ul className=\"flex flex-row justify-evenly py-20\">\n                    {shipments.map((shipment) => (\n                      <li key={shipment.destination} className=\"px-5\">\n                        <Card\n                          heading={shipment.destination}\n                          details={shipment.filledSpace}\n                          details2={shipment.availableSpace}\n                          details3={shipment.dispatchDate}\n                        />\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <>\n                    <b>No ongoing shipments found</b>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <b>Show Loader</b>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nShipmentList.propTypes = {\n  listShipments: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  shipments: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => {\n  console.log(\"State=\", state);\n  return {\n    auth: state.auth,\n    shipments: state.shipments,\n  };\n};\nexport default connect(mapStateToProps, { listShipments })(ShipmentList);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount(){\n    if(this.props.auth.isAuthenticated){\n      this.props.history.push(\"/dashboard\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\nconsole.log(newUser);\nthis.props.registerUser(newUser, this.props.history); \n\n  };\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2 flex flex-col\">\n            {/* <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link> */}\n            <div className=\"col s12\">\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\"><b>Log in</b></Link>\n              </p>\n            </div>\n            <div className=\"self-center w-3/4\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hover:shadow-lg hover:bg-green-700 bg-green-600 accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass Tab extends Component {\n    render() {\n        const {heading, icon, onClick, classes} = this.props;\n        return (\n        <button \n            type=\"submit\"\n            onClick={onClick}\n            className={`w-48 ${classes === \"\" ? classes : \"\"}`}>\n            <div className=\"w-full h-full\">\n            <div className={`relative rounded-sm shadow-md bg-green-500 p-2`} />\n            <div className=\"bg-green-400 p-8 border-8\">\n            <i className=\"py-2 material-icons align-middle flex flex-col\">{icon}</i>\n                <div className=\"pb-4\">{heading}</div>\n            </div>\n            <div className={`rounded-sm shadow-md bg-green-500 p-2`} />\n            </div>\n        </button>\n        );\n    }\n};\nTab.propTypes = {\n    heading: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n    classes: PropTypes.string = \"\"\n}\n\nexport default Tab;","import React from \"react\";\n \nconst Form = (props) => {\n\n  \n  return (\n    <div\n      id=\"form-component\"\n      className=\"fixed flex w-full h-full items-center justify-center\"\n    >\n      <div className=\"absolute inset-0 bg-opacity-50 bg-gray-400\" />\n      <div\n        className=\"bg-white z-40 max-h-screen overflow-scroll rounded-lg p-4 m-4\"\n        style={{ width: \"400px\" }}\n      >\n        <form\n          onSubmit={() => {\n            console.log(\"hello\");\n            props.onClose();\n          }}\n          onReset={() => {\n            props.onClose();\n          }}\n        >\n          <div className=\"input-field col s12\">\n            <input\n              error={\"Required\"}\n              id=\"destination\"\n              type=\"text\"\n            />\n            <label htmlFor=\"name\">Destination</label>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              error={\"Required\"}\n              id=\"vehicle\"\n              type=\"text\"\n            />\n            <label htmlFor=\"email\">Vehicle</label>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              error={\"Required\"}\n              id=\"emptySpace\"\n              type=\"text\"\n            />\n            <label htmlFor=\"password\">Available Space (12x20x20)</label>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              error={\"Required\"}\n              id=\"filledSpace\"\n              type=\"text\"\n            />\n            <label htmlFor=\"password2\">Filled Space (12x20x20)</label>\n          </div>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <button\n              style={{\n                width: \"100px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n                marginBottom: \"2rem\",\n              }}\n              type=\"submit\"\n              className=\"btn btn-large waves-effect waves-light hover:shadow-lg hover:bg-green-700 bg-green-600 text-sm accent-3\"\n            >\n              Add\n            </button>\n            <button\n              style={{\n                borderRadius: \"3px\",\n                marginTop: \"1rem\",\n                marginBottom: \"2rem\",\n              }}\n              type=\"reset\"\n              className=\"btn btn-large ml-2 waves-effect waves-light hover:shadow-lg hover:bg-gray-400 bg-gray-200 text-gray-800 text-sm accent-3\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Form;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Tab from \"../widgets/Tab\";\nimport Form from \"../widgets/Form\";\n\nconst Dashboard = (props) => {\n  const { user } = props.auth;\n  const [showModal, setShowModal] = useState(false);\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n  const history = useHistory();\n  const reroute = (path) => {\n    history.push(path);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 center-align\">\n        <h4>\n          <div className=\"m-4\">\n            <b>Hey,</b> {user.name.split(\" \")[0]}\n          </div>\n          <p className=\"flow-text grey-text text-darken-1\">\n            Successfully logged into{\" \"}\n            <span style={{ fontFamily: \"monospace\" }}>truck-truck-go</span>\n          </p>\n        </h4>\n        <div className=\"flex flex-row flex-shrink w-full justify-evenly py-20 text-2xl md:text-sm\">\n          <Tab\n            icon=\"library_add\"\n            heading=\"Add New Shipment\"\n            onClick={() => {\n              reroute(\"/add-shipment\");\n            }}\n            className=\"m-2 w-1/5\"\n          />\n          <Tab\n            icon=\"list_alt\"\n            heading=\"View Ongoing Shipments\"\n            onClick={() => {\n              reroute(\"/shipment-list\");\n            }}\n            className=\"m-2 w-1/5\"\n          />\n        </div>\n      </div>\n      {showModal && <Form onClose={onCloseModal} />}\n    </div>\n  );\n};\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport AddShipment from \"./components/auth/AddShipment\";\nimport ShipmentList from \"./components/auth/ShipmentList\";\nimport Register from \"./components/auth/Register\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exect path=\"/add-shipment\" component={AddShipment} />\n              <PrivateRoute exect path=\"/shipment-list\" component={ShipmentList} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}